/*

 */

#include "LPC17xx.h"

#define OP00	(1<<0)
#define OP01	(1<<1)
#define IP20	(1<<0)
#define IP21	(1<<1)


void configGPIO(void);
void configGpioInt(void);

int main(void) {

	configGPIO();
	configGpioInt();
	LPC_GPIO0->FIOSET |= REDLED;
	LPC_GPIO3->FIOSET |= GREENLED;
	LPC_GPIO3->FIOSET |= BLUELED;

	while(1) {
		//do nothing
	}

    return 0 ;
}

void EINT3_IRQHandler(void) {
	//debounce treating

	if(LPC_GPIOINT->IO0IntStatF & INPUT1) { //P0.9 falling
		LPC_GPIO0->FIOCLR |= REDLED;
		LPC_GPIO3->FIOSET |= GREENLED;
		LPC_GPIO3->FIOSET |= BLUELED;
		LPC_GPIOINT->IO0IntClr |= INPUT1;
	}
	else if(LPC_GPIOINT->IO0IntStatR & INPUT2) { //P0.10 rising
		LPC_GPIO0->FIOSET |= REDLED;
		LPC_GPIO3->FIOCLR |= GREENLED;
		LPC_GPIO3->FIOSET |= BLUELED;
		LPC_GPIOINT->IO0IntClr |= INPUT2;
	}
	else if(LPC_GPIOINT->IO0IntStatF & INPUT3 || LPC_GPIOINT->IO0IntStatR & INPUT3) { //P0.11 falling/rising
		LPC_GPIO0->FIOSET |= REDLED;
		LPC_GPIO3->FIOSET |= GREENLED;
		LPC_GPIO3->FIOCLR |= BLUELED;
		LPC_GPIOINT->IO0IntClr |= INPUT3;
	}
}

void configGPIO(void) {
	/*PINSEL*/
			//P0<1:0> GPIO
		LPC_PINCON->PINSEL0 &= ~(0xF<<0); //P0.0 y P0.1 as GPIO

	/*FIODIR*/

			//P0<1:0> as output
		LPC_GPIO0 -> FIODIR |= OP00; 	//P0.0 as output
		LPC_GPIO0 -> FIODIR |= OP01;	//P0.1 as output

}

void configGpioInt(void) {
    
    LPC_PINCON->PINSEL4 |= (1<<20); //EINT0
	LPC_PINCON->PINSEL4 |= (1<<22); //EINT1
	LPC_PINCON->PINSEL4 |= (1<<24); //EINT2

	LPC_SC->EXTMODE |= EINT0; //EINT0 edge sensitive
	LPC_SC->EXTMODE |= EINT1; //EINT1 edge sensitive
	LPC_SC->EXTMODE |= EINT2; //EINT2 edge sensitive

	LPC_SC->EXTPOLAR |= EINT0; //EINT0 rising edge
	LPC_SC->EXTPOLAR |= EINT1; //EINT1 rising edge
	LPC_SC->EXTPOLAR &= ~(EINT2); //EINT2 falling edge

	LPC_SC->EXTINT |= EINT0; //EINT0 clear flag
	LPC_SC->EXTINT |= EINT1; //EINT1 clear flag
	LPC_SC->EXTINT |= EINT2; //EINT2 clear flag

	NVIC_EnableIRQ(EINT0_IRQn);
	NVIC_EnableIRQ(EINT1_IRQn);
	NVIC_EnableIRQ(EINT2_IRQn);
}





